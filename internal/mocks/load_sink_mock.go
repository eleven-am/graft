// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	ports "github.com/eleven-am/graft/internal/ports"
	mock "github.com/stretchr/testify/mock"
)

// MockLoadSink is an autogenerated mock type for the LoadSink type
type MockLoadSink struct {
	mock.Mock
}

type MockLoadSink_Expecter struct {
	mock *mock.Mock
}

func (_m *MockLoadSink) EXPECT() *MockLoadSink_Expecter {
	return &MockLoadSink_Expecter{mock: &_m.Mock}
}

// ReceiveLoadUpdate provides a mock function with given fields: update
func (_m *MockLoadSink) ReceiveLoadUpdate(update ports.LoadUpdate) error {
	ret := _m.Called(update)

	if len(ret) == 0 {
		panic("no return value specified for ReceiveLoadUpdate")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(ports.LoadUpdate) error); ok {
		r0 = rf(update)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockLoadSink_ReceiveLoadUpdate_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ReceiveLoadUpdate'
type MockLoadSink_ReceiveLoadUpdate_Call struct {
	*mock.Call
}

// ReceiveLoadUpdate is a helper method to define mock.On call
//   - update ports.LoadUpdate
func (_e *MockLoadSink_Expecter) ReceiveLoadUpdate(update interface{}) *MockLoadSink_ReceiveLoadUpdate_Call {
	return &MockLoadSink_ReceiveLoadUpdate_Call{Call: _e.mock.On("ReceiveLoadUpdate", update)}
}

func (_c *MockLoadSink_ReceiveLoadUpdate_Call) Run(run func(update ports.LoadUpdate)) *MockLoadSink_ReceiveLoadUpdate_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(ports.LoadUpdate))
	})
	return _c
}

func (_c *MockLoadSink_ReceiveLoadUpdate_Call) Return(_a0 error) *MockLoadSink_ReceiveLoadUpdate_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockLoadSink_ReceiveLoadUpdate_Call) RunAndReturn(run func(ports.LoadUpdate) error) *MockLoadSink_ReceiveLoadUpdate_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockLoadSink creates a new instance of MockLoadSink. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockLoadSink(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockLoadSink {
	mock := &MockLoadSink{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
