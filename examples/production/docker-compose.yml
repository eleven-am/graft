version: '3.8'

services:
  node-1:
    build: .
    container_name: graft-node-1
    environment:
      - NODE_ID=node-1
      - SERVICE_NAME=production-cluster
      - SERVICE_PORT=8080
      - TRANSPORT_PORT=9090
      - DATA_DIR=/data
      - PEER_NODE_2=node-2:8080
      - PEER_NODE_3=node-3:8080
      - LOG_LEVEL=info
      - ENABLE_TLS=false
    ports:
      - "8081:8080"
      - "9091:9090"
    volumes:
      - node1_data:/data
      - ./certs:/certs:ro
    networks:
      - graft-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

  node-2:
    build: .
    container_name: graft-node-2
    environment:
      - NODE_ID=node-2
      - SERVICE_NAME=production-cluster
      - SERVICE_PORT=8080
      - TRANSPORT_PORT=9090
      - DATA_DIR=/data
      - PEER_NODE_1=node-1:8080
      - PEER_NODE_3=node-3:8080
      - LOG_LEVEL=info
      - ENABLE_TLS=false
    ports:
      - "8082:8080"
      - "9092:9090"
    volumes:
      - node2_data:/data
      - ./certs:/certs:ro
    networks:
      - graft-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    depends_on:
      - node-1

  node-3:
    build: .
    container_name: graft-node-3
    environment:
      - NODE_ID=node-3
      - SERVICE_NAME=production-cluster
      - SERVICE_PORT=8080
      - TRANSPORT_PORT=9090
      - DATA_DIR=/data
      - PEER_NODE_1=node-1:8080
      - PEER_NODE_2=node-2:8080
      - LOG_LEVEL=info
      - ENABLE_TLS=false
    ports:
      - "8083:8080"
      - "9093:9090"
    volumes:
      - node3_data:/data
      - ./certs:/certs:ro
    networks:
      - graft-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    depends_on:
      - node-1

  prometheus:
    image: prom/prometheus:latest
    container_name: graft-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - graft-network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: graft-grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana-dashboards:/var/lib/grafana/dashboards:ro
      - ./grafana-provisioning:/etc/grafana/provisioning:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - graft-network
    restart: unless-stopped
    depends_on:
      - prometheus

networks:
  graft-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  node1_data:
    driver: local
  node2_data:
    driver: local
  node3_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local